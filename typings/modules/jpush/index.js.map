{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;;;;;;;;OAYO,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,oBAAoB;OAC7C,EAAE,UAAU,EAAE,MAAM,iBAAiB;AAE5C;;;;;;;;;;;;;;GAcG;AAQH;IAAA;IAgFA,CAAC;IA5EC,oBAAI,GAAJ;QACE,MAAM,CAAC,CAAC,yDAAyD;IACnE,CAAC;IAID,wBAAQ,GAAR;QACE,MAAM,CAAC;IACT,CAAC;;IAGD,0BAAU,GAAV;QACE,MAAM,CAAC;IACT,CAAC;;IAGD,6BAAa,GAAb;QACE,MAAM,CAAC;IACT,CAAC;;IAGD,iCAAiB,GAAjB;QACE,MAAM,CAAC;IACT,CAAC;;IAGD,gCAAgB,GAAhB,UAAiB,IAAe,EAAE,KAAc;QAC9C,MAAM,CAAC;IACT,CAAC;;IAGD,uBAAO,GAAP,UAAQ,IAAe;QACrB,MAAM,CAAC;IACT,CAAC;;IAGD,wBAAQ,GAAR,UAAS,KAAc;QACrB,MAAM,CAAC;IACT,CAAC;;IAGD,wBAAQ,GAAR,UAAS,QAAiB;QACxB,MAAM,CAAC;IACT,CAAC;;IAGD,2CAA2B,GAA3B;QACE,MAAM,CAAC;IACT,CAAC;;IAOD,gCAAgB,GAAhB;QACE,MAAM,CAAC;IACT,CAAC;;IAOD,mCAAmB,GAAnB;QACE,MAAM,CAAC;IACT,CAAC;;IAOD,8BAAc,GAAd;QACE,MAAM,CAAC;IACT,CAAC;;IA5ED;QAAC,OAAO,EAAE;;;;qCAAA;IAMV;QAAC,OAAO,EAAE;;;;yCAAA;IAKV;QAAC,OAAO,EAAE;;;;2CAAA;IAKV;QAAC,OAAO,EAAE;;;;8CAAA;IAKV;QAAC,OAAO,EAAE;;;;kDAAA;IAKV;QAAC,OAAO,EAAE;;;;iDAAA;IAKV;QAAC,OAAO,EAAE;;;;wCAAA;IAKV;QAAC,OAAO,EAAE;;;;yCAAA;IAKV;QAAC,OAAO,EAAE;;;;yCAAA;IAKV;QAAC,OAAO,EAAE;;;;4DAAA;IAKV;QAAC,OAAO,CAAC;YACP,eAAe,EAAE,IAAI;YACrB,KAAK,EAAE,wBAAwB;YAC/B,OAAO,EAAE,UAAU;SACpB,CAAC;;;;iDAAA;IAKF;QAAC,OAAO,CAAC;YACP,eAAe,EAAE,IAAI;YACrB,KAAK,EAAE,2BAA2B;YAClC,OAAO,EAAE,UAAU;SACpB,CAAC;;;;oDAAA;IAKF;QAAC,OAAO,CAAC;YACP,eAAe,EAAE,IAAI;YACrB,KAAK,EAAE,sBAAsB;YAC7B,OAAO,EAAE,UAAU;SACpB,CAAC;;;;+CAAA;IAnFJ;QAAC,MAAM,CAAC;YACN,UAAU,EAAE,OAAO;YACnB,MAAM,EAAE,uBAAuB;YAC/B,SAAS,EAAE,qBAAqB;YAChC,IAAI,EAAE,gDAAgD;SAEvD,CAAC;;aAAA;IAiFF,YAAC;AAAD,CAAC,AAhFD,IAgFC","sourcesContent":["/**\n * This is a template for new plugin wrappers\n *\n * TODO:\n * - Add/Change information below\n * - Document usage (importing, executing main functionality)\n * - Remove any imports that you are not using\n * - Add this file to /src/index.ts (follow style of other plugins)\n * - Remove all the comments included in this template, EXCEPT the @Plugin wrapper docs.\n * - Remove this note\n *\n */\nimport { Plugin, Cordova } from '@ionic-native/core';\nimport { Observable } from 'rxjs/Observable';\n\n/**\n * @name JPush\n * @description\n * This plugin does something\n *\n * @usage\n * ```\n * import { JPush } from 'ionic-native';\n *\n * JPush.functionName('Hello', 123)\n *   .then((something: any) => doSomething(something))\n *   .catch((error: any) => console.log(error));\n *\n * ```\n */\n@Plugin({\n  pluginName: 'JPush',\n  plugin: 'jpush-phonegap-plugin', // npm package name, example: cordova-plugin-camera\n  pluginRef: 'plugins.jPushPlugin', // the variable reference to call the plugin, example: navigator.geolocation\n  repo: 'https://github.com/jpush/jpush-phonegap-plugin', // the github repository URL for the plugin\n  // install: '' // OPTIONAL install command, in case the plugin requires variables\n})\nexport class JPush {\n\n\n  @Cordova()\n  init(): Promise<any> {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n\n  @Cordova()\n  stopPush(): Promise<any> {\n    return;\n  };\n\n  @Cordova()\n  resumePush(): Promise<any> {\n    return;\n  };\n\n  @Cordova()\n  isPushStopped(): Promise<any> {\n    return;\n  };\n\n  @Cordova()\n  getRegistrationID(): Promise<any> {\n    return;\n  };\n\n  @Cordova()\n  setTagsWithAlias(tags?: string[], alias?: string): Promise<any> {\n    return;\n  };\n\n  @Cordova()\n  setTags(tags?: string[]): Promise<any> {\n    return;\n  };\n\n  @Cordova()\n  setAlias(alias?: string): Promise<any> {\n    return;\n  };\n\n  @Cordova()\n  setBadge(badgeNum?: number): Promise<any> {\n    return;\n  };\n\n  @Cordova()\n  getUserNotificationSettings(): Promise<any> {\n    return;\n  };\n\n  @Cordova({\n    eventObservable: true,\n    event: 'jpush.openNotification',\n    element: 'document'\n  })\n  openNotification(): Observable<any> {\n    return;\n  };\n\n  @Cordova({\n    eventObservable: true,\n    event: 'jpush.receiveNotification',\n    element: 'document'\n  })\n  receiveNotification(): Observable<any> {\n    return;\n  };\n\n  @Cordova({\n    eventObservable: true,\n    event: 'jpush.receiveMessage',\n    element: 'document'\n  })\n  receiveMessage(): Observable<any> {\n    return;\n  };\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}
